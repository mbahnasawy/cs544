<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/util 
       http://www.springframework.org/schema/util/spring-util-3.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
       http://www.springframework.org/schema/security
       http://www.springframework.org/schema/security/spring-security.xsd">

	<context:component-scan base-package="cs544.sample" />
	<mvc:annotation-driven />

	<bean id="carDao" class="cs544.sample.CarDao" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- Lets us find resources (.html etc) through the default servlet -->
	<mvc:default-servlet-handler />


	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources/ directory 
	<mvc:resources mapping="/resources/**"
		location="/resources/" /> -->

	<http auto-config="true">
		<access-denied-handler error-page="/accessdenied" />
		<intercept-url pattern="/" access="permitAll" />
		<intercept-url pattern="/cars" method="GET" access="hasAnyRole('ROLE_USER','ROLE_ADMIN')" />
		<intercept-url pattern="/cars" method="POST" access="hasAnyRole('ROLE_ADMIN')" />
		<intercept-url pattern="/cars/{id}" method="GET" access="hasAnyRole('ROLE_USER','ROLE_ADMIN')" />
		<intercept-url pattern="/cars/{id}" method="POST" access="hasAnyRole('ROLE_ADMIN')" />		
		<intercept-url pattern="/cars/delete" access="hasRole('ROLE_ADMIN')" />
		<form-login default-target-url="/cars" />
		<logout logout-success-url="/" />
		<csrf />
	</http>

	<authentication-manager>
		<authentication-provider>
			<user-service>
				<user name="user" password="user" authorities="ROLE_USER" />
				<user name="admin" password="admin" authorities="ROLE_ADMIN, ROLE_USER" />
			</user-service>
		</authentication-provider>
	</authentication-manager>


</beans>